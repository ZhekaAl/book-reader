{"version":3,"sources":["config.js","components/Book.js","components/ListBook.js","App.js","index.js"],"names":["serverPath","Book","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","filename","output","input","chaptersTexts","chaptersTitles","currentPage","currentChapter","modalIsOpen","translate","bind","assertThisInitialized","findWord","first","selectChapter","openModal","closeModal","modalTriggerButton","React","createRef","clickButton","console","log","match","params","file","onHandleBookChanged","chpt","setState","openBook","current","onClick","i","onCurrentChapterChanged","window","scrollTo","textToTranslate","language","_this2","axios","get","then","response","data","catch","error","that","resp","texts","split","splice","event","preventDefault","s","getSelection","range","getRangeAt","node","anchorNode","toString","indexOf","setStart","startOffset","setEnd","endOffset","trim","length","str","_this3","text","replace","text2HTML","react_default","a","createElement","className","lib","items","activePage","maxButtons","onSelect","e","ReactHtmlParser","trigger","style","display","ref","Component","ListBook","bookList","openBookList","item","pathname","key","Link","to","map","renderItem2","localStorage","require","App","_fileName","getItem","_chapter","parseInt","chapter","fileName","handleBookChanged","handleChapterChanged","setItem","BrowserRouter","basename","process","left","Route","exact","path","render","components_ListBook","assign","Book_Book","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ca0b5c0.chunk.js","sourcesContent":["const server_path_localhost = \"http://localhost:3001\";\nconst heroku_path = \"https://english-book-reader.herokuapp.com\";\nexport const serverPath = heroku_path;\n\nexport default serverPath;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { serverPath } from \"../config.js\";\nimport { Pagination, Modal, Button } from \"react-materialize\";\n\nimport ReactHtmlParser from \"react-html-parser\";\n\n//const page_size = 2000;\n\nfunction text2HTML(text) {\n  // 1: Plain Text Search\n  text = text\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\");\n\n  // 2: Line Breaks\n  text = text.replace(/\\r\\n?|\\n/g, \"<br>\");\n\n  // 3: Paragraphs\n  text = text.replace(/<br>\\s*<br>/g, \"</p><p>\");\n\n  // 4: Wrap in Paragraph Tags\n  text = \"<p>\" + text + \"</p>\";\n\n  return text;\n}\n\nexport default class Book extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filename: \"\",\n      output: \"\",\n      input: \"\",\n      chaptersTexts: [\"q\"],\n      chaptersTitles: [],\n      currentPage: 1,\n      currentChapter: 1,\n      modalIsOpen: false\n    };\n    this.translate = this.translate.bind(this);\n    this.findWord = this.findWord.bind(this);\n    this.first = this.first.bind(this);\n    // this.select = this.select.bind(this);\n    this.selectChapter = this.selectChapter.bind(this);\n    //this.handleHideModal = this.handleHideModal.bind(this);\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n\n    this.modalTriggerButton = React.createRef();\n    this.clickButton = this.clickButton.bind(this);\n\n    console.log(\"Book construct\");\n  }\n\n  componentDidMount() {\n    console.log(\"Book componentDidMount\");\n    // Modal.setAppElement(\"#root\");\n    // Modal.setAppElement(\"#root\");\n    console.log(\"props=\", this.props);\n\n    let filename = this.props.match.params.file;\n    console.log(\"filename=\", filename);\n\n    if (typeof filename != \"undefined\") {\n      this.props.onHandleBookChanged(filename);\n    }\n\n    let chpt = this.props.currentChapter;\n    if (typeof chpt != \"undefined\") {\n      this.setState({ currentChapter: chpt });\n    }\n\n    // if (filename === \"\") filename = this.props.filename;\n\n    this.openBook(filename);\n  }\n\n  clickButton() {\n    console.log(\"shsrh\");\n    this.modalTriggerButton.current.props.onClick();\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n    this.clickButton();\n  }\n\n  /* afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = \"#f00\";\n  } */\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  /*handleHideModal() {\n    this.setState(state => {\n      return {\n        openModal: false\n      };\n    });\n  }*/\n\n  first() {\n    // const size = this.state.input.length;\n    // const firstPage = this.state.input.slice(0,page_size)\n    // const page_number = size/page_size\n    console.log(\"first\");\n    this.setState(state => {\n      return {\n        // currentText: firstPage,\n        // pageNumber:page_number,\n        currentChapter: 1\n      };\n    });\n  }\n\n  /*select(i) {\n    this.setState(state => {\n      return {\n        currentPage: i\n      };\n    });\n  }*/\n\n  selectChapter(i) {\n    this.props.onCurrentChapterChanged(i);\n    this.setState(state => {\n      return {\n        currentChapter: i\n      };\n    });\n    window.scrollTo(0, 0);\n  }\n\n  translate(textToTranslate, language) {\n    axios\n      .get(serverPath + \"/api/get-translate/\" + textToTranslate)\n      .then(response => {\n        var output = response.data.data;\n        this.setState({ output });\n        this.openModal();\n      })\n      .catch(error => console.log(error));\n  }\n\n  /*openPdf(filename) {\n    var that = this;\n    axios\n      .get(\"http://localhost:3001/api/get-book_pdf\")\n      .then(function(response) {\n        let resp = response.data;\n        console.log(\"resp\", resp);\n        that.setState({\n          input: resp.data\n        });\n      });\n  }*/\n\n  openBook(filename) {\n    var that = this;\n    // axios.get(\"http://localhost:3001/api/get-book1\").then(function(response) {\n    axios\n      .get(serverPath + \"/api/get-book/\" + filename)\n      .then(function(response) {\n        let resp = response.data;\n        // console.log(\"resp\", resp);\n\n        let texts = resp.data.split(/CHAPTER\\s\\w*|Chapter\\s\\w*/g);\n        texts.splice(0, 1);\n\n        that.setState({\n          input: resp.data,\n          chaptersTitles: resp.data.match(/CHAPTER\\s\\w*|Chapter\\s\\w*/g),\n          chaptersTexts: texts\n          // .splice(0, 1) //remove first \\t\n        });\n        // console.log(resp.data.match(/Chapter\\s\\w*/g));\n        // that.first();\n      });\n  }\n\n  // styleChapters(data) {return  data.replace(/Chapter/, '<span style=\"color: red\">$&</span>')  }\n\n  findWord(event) {\n    event.preventDefault();\n    let s = window.getSelection();\n    var range = s.getRangeAt(0);\n    var node = s.anchorNode;\n    while (range.toString().indexOf(\" \") !== 0) {\n      range.setStart(node, range.startOffset - 1);\n    }\n    range.setStart(node, range.startOffset + 1);\n    do {\n      range.setEnd(node, range.endOffset + 1);\n    } while (\n      range.toString().indexOf(\" \") === -1 &&\n      range.toString().trim() !== \"\" &&\n      range.endOffset < node.length\n    );\n    var str = range.toString().trim();\n    //   alert(str);\n\n    var language = \"ru\"; // this.refs.language.value;\n    this.translate(str, language);\n  }\n\n  render() {\n    console.log(\"book render\", this.state.filename, this.state.currentChapter);\n    const currentChapter = this.state.currentChapter;\n    let text = \"\";\n    if (this.state.chaptersTexts.length > currentChapter - 1) {\n      text = text2HTML(this.state.chaptersTexts[currentChapter - 1]);\n      //console.log(currentChapter, this.state.chaptersTexts[currentChapter - 1]);\n    }\n    return (\n      <div className=\"TranslateForm\">\n        {\n          <Pagination\n            items={this.state.chaptersTexts.length}\n            activePage={currentChapter}\n            maxButtons={7}\n            onSelect={e => {\n              console.log(\"selectCh\", e);\n              this.selectChapter(e);\n            }}\n          />\n        }\n        <div onClick={this.findWord}>\n          {/*this.state.input.slice((cpg - 1) * page_size, cpg * page_size)*/\n          //    this.state.chaptersTexts[this.state.currentChapter-1].slice((cpg - 1) * page_size, cpg * page_size)\n          ReactHtmlParser(text)}\n        </div>\n\n        <Modal\n          trigger={\n            <Button style={{ display: \"none\" }} ref={this.modalTriggerButton}>\n              MODAL{\" \"}\n            </Button>\n          }\n        >\n          {this.state.output}\n        </Modal>\n\n        {/*<Pagination\n          items={\n            this.state.chaptersTexts[currentChapter - 1].length / this.page_size\n          }\n          activePage={this.state.currentPage}\n          maxButtons={7}\n          onSelect={e => {\n            console.log(\"select\", e);\n            this.select(e);\n          }}\n        />*/}\n\n        {\n          <Pagination\n            items={this.state.chaptersTexts.length}\n            activePage={currentChapter}\n            maxButtons={7}\n            onSelect={e => {\n              console.log(\"selectCh\", e);\n              this.selectChapter(e);\n            }}\n          />\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { serverPath } from \"../config.js\";\nimport { Link } from \"react-router-dom\";\nimport { Collection, CollectionItem } from \"react-materialize\";\n\nclass ListBook extends Component {\n  constructor() {\n    super();\n    this.state = {\n      bookList: []\n    };\n    this.openBookList = this.openBookList.bind(this);\n\n    console.log(\"ListBook construct\");\n    this.openBookList();\n  }\n  openBookList() {\n    var that = this;\n\n    axios.get(serverPath + \"/api/get-listBooks\").then(function(response) {\n      let resp = response.data;\n      console.log(\"ListBook resp\", resp);\n      that.setState({\n        bookList: resp.data\n      });\n      //  that.first();\n    });\n  }\n\n  renderItem2(item) {\n    //href={pathname}\n    const pathname = \"/book/\" + item;\n    return (\n      <CollectionItem key={item}>\n        <Link to={pathname}>{item}</Link>\n      </CollectionItem>\n    );\n  }\n\n  renderItem(item) {\n    return (\n      <p key={item}>\n        <Link\n          to={{\n            pathname: \"/book/\" + item\n            // search: item\n            // hash: \"#the-hash\",\n            // state: { fromDashboard: true }\n          }}\n        >\n          {item}\n        </Link>\n      </p>\n    );\n  }\n\n  render() {\n    console.log(\"ListBook render\");\n    return (\n      <Collection>{this.state.bookList.map(this.renderItem2)}</Collection>\n      //};\n    );\n  }\n}\n\nexport default ListBook;\n","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Book from \"./components/Book.js\";\nimport ListBook from \"./components/ListBook.js\";\nimport { Navbar, NavItem } from \"react-materialize\";\nvar localStorage = require(\"localStorage\");\n\n//const Book = ({ match }) => <p>{match.params.file}</p>;\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    let _fileName = localStorage.getItem(\"fileName\");\n    if (_fileName === null) _fileName = \"\";\n\n    let _chapter = localStorage.getItem(\"chapter\");\n    if (_chapter === null) _chapter = 1;\n    else _chapter = parseInt(_chapter);\n\n    console.log(\"loadLocalStorage\", _fileName, _chapter);\n    this.chapter = _chapter;\n    this.state = {\n      fileName: _fileName\n    };\n    console.log(\"App constructor\");\n\n    this.handleBookChanged = this.handleBookChanged.bind(this);\n    this.handleChapterChanged = this.handleChapterChanged.bind(this);\n    // this.loadLocalStorage = this.loadLocalStorage.bind(this);\n    //this.saveToLocalStorage = this.saveToLocalStorage.bind(this);\n    // this.loadLocalStorage();\n  }\n  componentDidMount() {\n    console.log(\"App componentDidMount\");\n    //  this.loadLocalStorage();\n  }\n  /* componentWillUnmount() {\n    this.saveStateToLocalStorage();\n  }*/\n\n  /*loadLocalStorage() {\n    let _fileName = localStorage.getItem(\"fileName\");\n    let _chapter = localStorage.getItem(\"chapter\");\n\n    console.log(\"loadLocalStorage\", _fileName, _chapter);\n\n    if (_chapter !== null) this.chapter = _chapter;\n    if (_fileName !== null) this.setState({ fileName: _fileName });\n\n    // parse the localStorage string and setState\n    /* try {\n      _fileName = JSON.parse(_fileName);\n      _chapter = JSON.parse(_chapter);\n      if (_chapter !== null) this.chapter = _chapter;\n      if (_fileName !== null) this.setState({ fileName: _fileName });\n    } catch (e) {\n      // handle empty string\n      console.log(\"local storahe\", e);\n      //this.setState({ fileName: _fileName });\n    }\n  }\n  */\n\n  /*saveToLocalStorage() {\n    localStorage.setItem(\"fileName\", this.state.fileName);\n    localStorage.setItem(\"chapter\", this.chapter);\n  }*/\n\n  handleChapterChanged(_chapter) {\n    this.chapter = _chapter;\n    localStorage.setItem(\"chapter\", this.chapter);\n  }\n\n  handleBookChanged(_fileName) {\n    localStorage.setItem(\"fileName\", _fileName);\n    console.log(\" localStorage.setItem(fileName\", _fileName);\n\n    if (this.state.fileName !== _fileName) {\n      this.setState({ fileName: _fileName });\n      this.chapter = 1;\n      localStorage.setItem(\"chapter\", 1);\n    }\n  }\n\n  render() {\n    console.log(\"App render\");\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Navbar left>\n            <NavItem>\n              <Link to=\"/\">Books</Link>\n            </NavItem>\n            <NavItem>\n              <Link\n                to={{\n                  pathname: \"/book/\" + this.state.fileName\n                  // search: item\n                  // hash: \"#the-hash\",\n                  // state: { fromDashboard: true }\n                }}\n              >\n                {this.state.fileName}\n              </Link>\n            </NavItem>\n          </Navbar>\n\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <ListBook\n                {...props}\n                onHandleBookChanged={this.handleBookChanged}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/book/:file\"\n            render={props => (\n              <Book\n                {...props}\n                onCurrentChapterChanged={this.handleChapterChanged}\n                onHandleBookChanged={this.handleBookChanged}\n                currentChapter={this.chapter}\n              />\n            )}\n          />\n          {/* <Route exact path=\"/book/:file\" component={Book} />*/}\n          <Route path=\"/topics\" />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}