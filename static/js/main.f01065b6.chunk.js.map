{"version":3,"sources":["config.js","components/Book.js","components/ListBook.js","App.js","index.js"],"names":["serverPath","Book","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","output","input","chaptersTexts","chaptersTitles","currentPage","currentChapter","modalIsOpen","translate","bind","assertThisInitialized","findWord","first","select","selectChapter","handleHideModal","openModal","closeModal","modalTriggerButton","React","createRef","clickButton","console","log","props","filename","match","params","file","openBook","current","onClick","setState","i","textToTranslate","language","_this2","axios","get","then","response","data","catch","error","that","resp","texts","split","splice","event","preventDefault","s","window","getSelection","range","getRangeAt","node","anchorNode","toString","indexOf","setStart","startOffset","setEnd","endOffset","trim","length","str","_this3","text","replace","text2HTML","react_default","a","createElement","className","ReactHtmlParser","lib","trigger","style","display","ref","items","activePage","maxButtons","onSelect","e","Component","ListBook","bookList","openBookList","item","pathname","key","href","Link","to","map","renderItem2","App","BrowserRouter","basename","process","left","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f01065b6.chunk.js","sourcesContent":["const server_path_localhost = \"http://localhost:3001\";\nconst heroku_path = \"https://english-book-reader.herokuapp.com\";\nexport const serverPath = heroku_path;\n\nexport default serverPath;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { serverPath } from \"../config.js\";\nimport { Pagination, Modal, Button } from \"react-materialize\";\n\nimport ReactHtmlParser, {\n  processNodes,\n  convertNodeToElement,\n  htmlparser2\n} from \"react-html-parser\";\n\nconst page_size = 2000;\n\nfunction text2HTML(text) {\n  // 1: Plain Text Search\n  text = text\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\");\n\n  // 2: Line Breaks\n  text = text.replace(/\\r\\n?|\\n/g, \"<br>\");\n\n  // 3: Paragraphs\n  text = text.replace(/<br>\\s*<br>/g, \"</p><p>\");\n\n  // 4: Wrap in Paragraph Tags\n  text = \"<p>\" + text + \"</p>\";\n\n  return text;\n}\n\nexport default class Book extends Component {\n  constructor() {\n    super();\n    this.state = {\n      output: \"\",\n      input: \"\",\n      chaptersTexts: [\"q\"],\n      chaptersTitles: [],\n      currentPage: 1,\n      currentChapter: 1,\n      modalIsOpen: false\n    };\n    this.translate = this.translate.bind(this);\n    this.findWord = this.findWord.bind(this);\n    this.first = this.first.bind(this);\n    this.select = this.select.bind(this);\n    this.selectChapter = this.selectChapter.bind(this);\n    this.handleHideModal = this.handleHideModal.bind(this);\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n\n    this.modalTriggerButton = React.createRef();\n    this.clickButton = this.clickButton.bind(this);\n  }\n\n  componentDidMount() {\n    // Modal.setAppElement(\"#root\");\n    // Modal.setAppElement(\"#root\");\n    console.log(\"props=\", this.props);\n    let filename = this.props.match.params.file;\n    console.log(\"filename=\", filename);\n    this.openBook(filename);\n  }\n\n  clickButton() {\n    console.log(\"shsrh\");\n    this.modalTriggerButton.current.props.onClick();\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n    this.clickButton();\n  }\n\n  /* afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = \"#f00\";\n  } */\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  handleHideModal() {\n    this.setState(state => {\n      return {\n        openModal: false\n      };\n    });\n  }\n\n  first() {\n    // const size = this.state.input.length;\n    // const firstPage = this.state.input.slice(0,page_size)\n    // const page_number = size/page_size\n    console.log(\"first\");\n    this.setState(state => {\n      return {\n        // currentText: firstPage,\n        // pageNumber:page_number,\n        currentChapter: 1\n      };\n    });\n  }\n\n  select(i) {\n    this.setState(state => {\n      return {\n        currentPage: i\n      };\n    });\n  }\n\n  selectChapter(i) {\n    this.setState(state => {\n      return {\n        currentChapter: i\n      };\n    });\n  }\n\n  translate(textToTranslate, language) {\n    axios\n      .get(serverPath + \"/api/get-translate/\" + textToTranslate)\n      .then(response => {\n        var output = response.data.data;\n        this.setState({ output });\n        this.openModal();\n      })\n      .catch(error => console.log(error));\n  }\n\n  openPdf(filename) {\n    var that = this;\n    axios\n      .get(\"http://localhost:3001/api/get-book_pdf\")\n      .then(function(response) {\n        let resp = response.data;\n        console.log(\"resp\", resp);\n        that.setState({\n          input: resp.data\n        });\n      });\n  }\n\n  openBook(filename) {\n    var that = this;\n    // axios.get(\"http://localhost:3001/api/get-book1\").then(function(response) {\n    axios\n      .get(serverPath + \"/api/get-book/\" + filename)\n      .then(function(response) {\n        let resp = response.data;\n        // console.log(\"resp\", resp);\n\n        let texts = resp.data.split(/CHAPTER\\s\\w*|Chapter\\s\\w*/g);\n        texts.splice(0, 1);\n\n        that.setState({\n          input: resp.data,\n          chaptersTitles: resp.data.match(/CHAPTER\\s\\w*|Chapter\\s\\w*/g),\n          chaptersTexts: texts\n          // .splice(0, 1) //remove first \\t\n        });\n        // console.log(resp.data.match(/Chapter\\s\\w*/g));\n        that.first();\n      });\n  }\n\n  // styleChapters(data) {return  data.replace(/Chapter/, '<span style=\"color: red\">$&</span>')  }\n\n  findWord(event) {\n    event.preventDefault();\n    let s = window.getSelection();\n    var range = s.getRangeAt(0);\n    var node = s.anchorNode;\n    while (range.toString().indexOf(\" \") !== 0) {\n      range.setStart(node, range.startOffset - 1);\n    }\n    range.setStart(node, range.startOffset + 1);\n    do {\n      range.setEnd(node, range.endOffset + 1);\n    } while (\n      range.toString().indexOf(\" \") === -1 &&\n      range.toString().trim() !== \"\" &&\n      range.endOffset < node.length\n    );\n    var str = range.toString().trim();\n    //   alert(str);\n\n    var language = \"ru\"; // this.refs.language.value;\n    this.translate(str, language);\n  }\n\n  render() {\n    const currentChapter = this.state.currentChapter;\n    const text = text2HTML(this.state.chaptersTexts[currentChapter - 1]);\n    console.log(currentChapter, this.state.chaptersTexts[currentChapter - 1]);\n    return (\n      <div className=\"TranslateForm\">\n        <div onClick={this.findWord}>\n          {/*this.state.input.slice((cpg - 1) * page_size, cpg * page_size)*/\n          //    this.state.chaptersTexts[this.state.currentChapter-1].slice((cpg - 1) * page_size, cpg * page_size)\n          ReactHtmlParser(text)}\n        </div>\n\n        <Modal\n          trigger={\n            <Button style={{ display: \"none\" }} ref={this.modalTriggerButton}>\n              MODAL{\" \"}\n            </Button>\n          }\n        >\n          {this.state.output}\n        </Modal>\n\n        {/*<Pagination\n          items={\n            this.state.chaptersTexts[currentChapter - 1].length / this.page_size\n          }\n          activePage={this.state.currentPage}\n          maxButtons={7}\n          onSelect={e => {\n            console.log(\"select\", e);\n            this.select(e);\n          }}\n        />*/}\n\n        {\n          <Pagination\n            items={this.state.chaptersTexts.length}\n            activePage={currentChapter}\n            maxButtons={7}\n            onSelect={e => {\n              console.log(\"selectCh\", e);\n              this.selectChapter(e);\n            }}\n          />\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { serverPath } from \"../config.js\";\nimport { Link } from \"react-router-dom\";\nimport { Collection, CollectionItem } from \"react-materialize\";\n\nclass ListBook extends Component {\n  constructor() {\n    super();\n    this.state = {\n      bookList: []\n    };\n    this.openBookList = this.openBookList.bind(this);\n\n    this.openBookList();\n  }\n  openBookList() {\n    var that = this;\n\n    axios.get(serverPath + \"/api/get-listBooks\").then(function(response) {\n      let resp = response.data;\n      console.log(\"resp\", resp);\n      that.setState({\n        bookList: resp.data\n      });\n      //  that.first();\n    });\n  }\n\n  renderItem2(item) {\n    const pathname = \"/book/\" + item;\n    return (\n      <CollectionItem key={item} href={pathname}>\n        <Link to={pathname}>{item}</Link>\n      </CollectionItem>\n    );\n  }\n\n  renderItem(item) {\n    return (\n      <p key={item}>\n        <Link\n          to={{\n            pathname: \"/book/\" + item\n            // search: item\n            // hash: \"#the-hash\",\n            // state: { fromDashboard: true }\n          }}\n        >\n          {item}\n        </Link>\n      </p>\n    );\n  }\n\n  render() {\n    return (\n      <Collection>{this.state.bookList.map(this.renderItem2)}</Collection>\n      //};\n    );\n  }\n}\n\nexport default ListBook;\n","import React, { Component } from \"react\";\n\n// import \"jquery\";\n// import { Navbar, NavItem, Pagination } from \"react-materialize\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Book from \"./components/Book.js\";\nimport ListBook from \"./components/ListBook.js\";\nimport { Navbar, NavItem } from \"react-materialize\";\n\n// const server_path_localhost = \"http://localhost:3001\";\n// const heroku_path = \"https://english-book-reader.herokuapp.com\";\n// const server_path = server_path_localhost;\n\n//const Book = ({ match }) => <p>{match.params.file}</p>;\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Navbar left>\n            <NavItem>\n              <Link to=\"/\">Home</Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/topics\">Books</Link>\n            </NavItem>\n          </Navbar>\n\n          <Route exact path=\"/book/:file\" component={Book} />\n          <Route path=\"/topics\" component={ListBook} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}